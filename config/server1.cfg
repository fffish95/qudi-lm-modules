
global:
    # list of modules to load when starting
    startup: []

    # Module server configuration for accessing qudi GUI/logic/hardware modules from remote clients
    remote_modules_server:
        address: '10.140.0.52'
        port: 1144

    # Server port for serving the active qudi module namespace locally (localhost).
    # Used by e.g. the Qudi jupyter kernel.
    namespace_server_port: 18861

    # If this flag is set (True), all arguments passed to qudi module APIs from remote
    # (jupyter notebook, qudi console, remote modules) will be wrapped and passed "per value"
    # (serialized and de-serialized). This is avoiding a lot of inconveniences with using numpy in
    # remote clients.
    # If you do not want to use this workaround and know what you are doing, you can disable this
    # feature by setting this flag to False.
    force_remote_calls_by_value: True

    # Qss stylesheet for controlling the appearance of the GUIs.
    # Absolute path or relative to qudi.artwork.styles
    stylesheet: 'qdark.qss'

    # Default root directory for measurement data storage. All eventual data sub-directories should
    # be contained within this directory. This is not enforced, just convention.
    # The fallback directory is <user home>/qudi/Data/
    default_data_dir: 'C:\\Data\\'

    # Save data to daily data sub-directories by default
    daily_data_dirs: True

hardware:

    tagger:
        module.Class: 'local.timetagger.TT'
        options:            
            
            channels_params:
                ch1:
                    delay: 20000
                    # trigger_level: 2 # range 0.5V-2.5V, with 50 Ohms impedance usually half input Volts is read out

            test_channels: [1,2,8] #[1,2,3,4,5,6,7]#[1,2, 4, -4]
            combined_channels: # Alias for combined channels must not start with 'ch'
                DetectorChans:
                    - 'ch1'
                    - 'ch2'
                APDset1:
                    - 'ch1'
                    - 'ch2'
                APDset2:
                    - 'ch3'
                    - 'ch4'
        allow_remote: True

    nicard:
        module.Class: 'local.ni_card.NICard'
        options:
            device_name: 'Dev1'  
        allow_remote: True


    
    stepmotor:
        module.Class: 'local.step_motor.StepMotor'
        options:
            port:
                - 'COM14'
        allow_remote: True


    high_finesse_wavemeter:
        module.Class: 'local.high_finesse_wavemeter.HighFinesseWavemeter'
        allow_remote: True




logic:

    timetagger_instream_interfuse:
        module.Class: 'local.timetagger_instream_interfuse.TTInstreamInterfuse'
        connect:
            timetagger: 'tagger'
        options:
            available_channels:  
                - 'ch1'
                - 'ch2'
                - 'ch3'
                - 'ch4'
                - 'ch8'
                - 'DetectorChans'
            sample_rate: 50
            buffer_size: 10000000

    timeserieslogic:
        module.Class: 'local.time_series_reader_logic.TimeSeriesReaderLogic'
        connect:
            _streamer_con: 'timetagger_instream_interfuse'
            _savelogic_con: 'savelogic'
        options:
            max_frame_rate: 10  # optional (10Hz by default) should be > 2/trace_window_size
            calc_digital_freq: True  # optional (True by default)
    
    savelogic:
        module.Class: 'local.save_logic.SaveLogic'
        options:
            win_data_directory: 'C:/Data'   # DO NOT CHANGE THE DIRECTORY HERE! ONLY IN THE CUSTOM FILE!
            unix_data_directory: 'Data/'
            log_into_daily_directory: False # always False conflicts with new qudi
            save_pdf: True
            save_png: True
    
    sps_confocallogic:
        module.Class: 'local.sps_confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            savelogic: 'savelogic'
    
    sps_laserscannerlogic:
        module.Class: 'local.sps_laser_scanner_logic.LaserScannerLogic'
        connect:
            laserscannerscanner1: 'sps_setup'
            customscanlogic1: 'sps_customscanlogic'
            savelogic: 'savelogic'
        

    timetaggerlogic:
        module.Class: 'local.timetagger_logic.TimeTaggerLogic'
        connect:
            timetagger: 'tagger'
            savelogic: 'savelogic' 

    scanner_tilt_interfuse:
        module.Class: 'local.scanner_tilt_interfuse.ScannerTiltInterfuse'
        connect:
            confocalscanner1: 'sps_setup'


    fitlogic:
        module.Class: 'local.fit_logic.FitLogic'

    optimizerlogic:
        module.Class: 'local.optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            fitlogic: 'fitlogic'

    StepMotorLogic:
        module.Class: 'local.step_motor_logic.StepMotorLogic'
        connect:
            stepmotor1: 'stepmotor'

    sps_customscanlogic:
        module.Class: 'local.sps_custom_scan_logic.SPSCustonScanLogic'
        connect:
            stepmotor1: 'stepmotor_dummy'


        


gui:
    timeseries:
        module.Class: 'local.time_series.time_series_gui.TimeSeriesGui'
        connect:
            _time_series_logic_con: 'timeserieslogic'
        options:
            use_antialias: True  # optional, set to False if you encounter performance issues

    sps_confocal:
        module.Class: 'local.sps_confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'sps_confocallogic'
            savelogic: 'savelogic'
            optimizerlogic1: 'optimizerlogic'
        options:
            fixed_aspect_ratio_xy: True
            fixed_aspect_ratio_depth: True
            image_x_padding: 0.02
            image_y_padding: 0.02
            image_z_padding: 0.02
            default_meter_prefix: 'u'

    timetagger:
        module.Class: 'local.timetagger.timetagger.TTGui'
        connect:
            timetaggerlogic: 'timetaggerlogic'
            savelogic: 'savelogic'

    sps_laserscanner:
        module.Class: 'local.sps_laserscanner.laserscannergui.LaserscannerGui'
        connect:
            laserscannerlogic1: 'sps_laserscannerlogic'
            savelogic: 'savelogic'

    StepMotorGui:
        module.Class: 'local.step_motor.stepmotor.StepMotorGui'
        connect:
            stepmotorlogic: 'StepMotorLogic'
    